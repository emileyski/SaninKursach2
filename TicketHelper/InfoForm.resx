<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AABJRU5ErkJggg==
</value>
  </data>
</root>